version: '3.5'

services:

  db:
    image: mysql:5.7
    restart: always
    hostname: db
    container_name: db
#    network_mode: container:wordpress
    networks:
      - service-network
    ports:
      - "80"
      - "3306"
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - db:/var/lib/mysql

  wordpress:
    image: wordpress:beta-php8.2-apache
    container_name: wordpress
#    hostname: wordpress
    restart: always
    network_mode: service:db
#    networks:
#      - service-network
#    links:
#      - db
#    ports:
#      - "8080:80"
    depends_on:
      - db
    environment:
      WORDPRESS_DB_HOST: 127.0.0.1:3306
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb
    volumes:
      - wordpress:/var/www/html

  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    networks:
      - service-network
    links:
      - db
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports: 
      - "80:80"
#    build:
#      context: .
#      dockerfile: Dockerfile-nginx
    depends_on:
      - wordpress
 

volumes:
  wordpress: {}
  db: {}

networks:
  service-network:
    driver: bridge
